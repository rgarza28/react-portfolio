{"version":3,"sources":["components/Navbar.js","components/Header.js","components/index.js","components/Resume.js","components/Contact.js","components/Portfolio.js","App.js","serviceWorker.js","index.js","avatar.png"],"names":["useStyles","makeStyles","theme","menuSliderContainer","width","background","height","avatar","display","margin","spacing","listItem","color","menuItems","listIcon","listText","listPath","AssignmentInd","Apps","ContactMail","Navbar","slider","useState","right","state","setState","toggleSlider","open","classes","Box","component","AppBar","position","style","Toolbar","IconButton","onClick","ArrowBack","Typography","variant","anchor","onClose","className","Avatar","src","alt","Divider","List","map","lsItem","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","title","subtitle","marginBottom","typedContainer","top","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","loop","particlesCanvas","Home","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity","opacity_min","mainContainer","timeLine","padding","content","border","clear","breakpoints","up","left","Resume","align","Contact","Portfolio","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.fc7cc75f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MobileRightMenuSlider from \"@material-ui/core/Drawer\";\n\nimport {\n  AppBar,\n  Toolbar,\n  ListItem,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  Avatar,\n  Divider,\n  List,\n  Typography,\n  Box,\n  Icon,\n} from \"@material-ui/core\";\nimport {\n  ArrowBack,\n  AssignmentInd,\n  Home,\n  Apps,\n  ContactMail,\n} from \"@material-ui/icons\";\n\nimport avatar from \"../avatar.png\";\n\n//CSS STYLES\nconst useStyles = makeStyles((theme) => ({\n  menuSliderContainer: {\n    width: 250,\n    background: \"#511\",\n    height: \"100\",\n  },\n  avatar: {\n    display: \"block\",\n    margin: \"0.5rem auto\",\n    width: theme.spacing(13),\n    height: theme.spacing(13),\n  },\n  listItem: {\n    color: \"tan\",\n  },\n}));\n\n//Array of navbar items to map over\nconst menuItems = [\n  {\n    listIcon: <Home />,\n    listText: \"Home\",\n    listPath: \"/react-portfolio\",\n  },\n  {\n    listIcon: <AssignmentInd />,\n    listText: \"Resume\",\n    listPath: \"/resume\",\n  },\n  {\n    listIcon: <Apps />,\n    listText: \"Portfolio\",\n    listPath: \"/portfolio\",\n  },\n  {\n    listIcon: <ContactMail />,\n    listText: \"Contacts\",\n    listPath: \"/contact\",\n  },\n];\n\nconst Navbar = () => {\n  const [state, setState] = useState({\n    right: false,\n  });\n\n  const toggleSlider = (slider, open) => () => {\n    setState({ ...state, [slider]: open });\n  };\n  const classes = useStyles();\n\n  const sideList = (slider) => (\n    <Box\n      className={classes.menuSliderContainer}\n      component=\"div\"\n      onClick={toggleSlider(slider, false)}\n    >\n      <Avatar className={classes.avatar} src={avatar} alt=\"My Head Icon\" />\n      <Divider />\n      <List>\n        {menuItems.map((lsItem, key) => (\n          <ListItem button key={key} component={Link} to={lsItem.listPath}>\n            <ListItemIcon className={classes.listItem}>\n              {lsItem.listIcon}\n            </ListItemIcon>\n            <ListItemText\n              className={classes.listItem}\n              primary={lsItem.listText}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <>\n      <Box component=\"nav\">\n        <AppBar position=\"static\" style={{ background: \"#222\" }}>\n          <Toolbar>\n            <IconButton onClick={toggleSlider(\"right\", true)}>\n              <ArrowBack style={{ color: \"red\" }} />\n            </IconButton>\n            <Typography variant=\"h5\" style={{ color: \"tan\" }}>\n              Menu\n            </Typography>\n            <MobileRightMenuSlider\n              anchor=\"left\"\n              open={state.right}\n              onClose={toggleSlider(\"right\", false)}\n            >\n              {sideList(\"right\")}\n            </MobileRightMenuSlider>\n          </Toolbar>\n        </AppBar>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport Typed from \"react-typed\";\nimport avatar from \"../avatar.png\";\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.typedContainer}>\n      <Grid container justify=\"center\">\n        <Avatar className={classes.avatar} src={avatar} alt=\"Icon of ME\" />\n      </Grid>\n      <Typography className={classes.title} variant=\"h4\">\n        <Typed strings={[\"Robert Garza Portfolio\"]} typeSpeed={100} />\n      </Typography>\n      <br />\n      <Typography className={classes.subtitle} variant=\"h4\">\n        <Typed\n          strings={[\"HTML/CSS\", \"JAVASCRIPT\", \"SQL\", \"NOSQL\", \"NODE\", \"REACT\"]}\n          typeSpeed={60}\n          loop\n        />\n      </Typography>\n    </Box>\n  );\n};\n\n// CSS\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    margin: theme.spacing(1),\n  },\n  title: {\n    color: \"red\",\n  },\n  subtitle: {\n    color: \"tan\",\n    marginBottom: \"3rem\",\n  },\n  typedContainer: {\n    position: \"absolute\",\n    top: \"30%\",\n    // left: \"50%\",\n    // transform: \"translate(-50%, - 50%)\",\n    width: \"100vw\",\n    textAlign: \"center\",\n    zIndex: 1,\n  },\n}));\n\nexport default Header;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Header from \"./Header\";\nimport Particles from \"react-particles-js\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  particlesCanvas: {\n    position: \"absolute\",\n  },\n});\n\nconst Home = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Navbar />\n      <Header />\n      <Particles\n        canvasClassName={classes.particlesCanvas}\n        params={{\n          particles: {\n            number: {\n              value: 45,\n              density: {\n                enable: true,\n                value_area: 900,\n              },\n            },\n            shape: {\n              type: \"star\",\n              stroke: {\n                width: 1,\n                color: \"red\",\n              },\n            },\n            size: {\n              value: 1,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 7,\n                size_min: 0.1,\n                sync: true,\n              },\n            },\n            opacity: {\n              value: 1,\n              random: true,\n              anim: {\n                enable: true,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: true,\n              },\n            },\n          },\n        }}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport Navbar from \"./Navbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    background: \"#233\",\n  },\n  timeLine: {\n    position: \"relative\",\n    padding: \"1rem\",\n    margin: \"0 auto\",\n    \"&:before\": {\n      content: \"''\",\n      position: \"absolute\",\n      height: \"100%\",\n      border: \"1px solid tan\",\n      right: \"40px\",\n      top: 0,\n    },\n    \"&:after\": {\n      content: \"''\",\n      display: \"table\",\n      clear: \"both\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      padding: \"2rem\",\n      \"&:before\": {\n        left: \"calc(50% - 1px)\",\n        right: \"auto\",\n      },\n    },\n  },\n}));\n\nconst Resume = () => {\n  const classes = useStyles();\n  return (\n    <>\n      <Navbar />\n      <h2>Resume Component</h2>\n      <Box component=\"header\" className={classes.mainContainer}>\n        <Typography variant=\"h4\" align=\"center\">\n          Work Experience\n        </Typography>\n        <Box component=\"div\" className={classes.timeLine}>\n          <Typography variant=\"h2\">2019</Typography>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst Contact = () => {\n  return (\n    <>\n      <Navbar />\n      <h2>Contact Component</h2>\n      <Box component=\"header\">\n        <Typography variant=\"h4\" align=\"center\">\n          Contact Information\n        </Typography>\n        <Box component=\"div\">\n          <Typography variant=\"h2\">Insert Contact Info Here</Typography>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Typography, Box } from \"@material-ui/core\";\n\nconst Portfolio = () => {\n  return (\n    <>\n      <Navbar />\n      <h2>Portfolio Component</h2>\n      <Box component=\"header\">\n        <Typography variant=\"h4\" align=\"center\">\n          Projects\n        </Typography>\n        <Box component=\"div\">\n          <Typography variant=\"h2\">Insert Projects Here</Typography>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/index\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Resume from \"./components/Resume\";\nimport Contact from \"./components/Contact\";\nimport Portfolio from \"./components/Portfolio\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Route exact path=\"/react-portfolio\" component={Home} />\n      <Route path=\"/resume\" component={Resume} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.bcb163e2.png\";"],"sourceRoot":""}